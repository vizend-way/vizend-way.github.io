"use strict";(self.webpackChunkdocs_github_io=self.webpackChunkdocs_github_io||[]).push([[1327],{1368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var i=n(4848),s=n(8453);const o={sidebar_position:5},r="Using of @FieldSequence annotation",d={id:"studio-guide/sequence_eng",title:"Using of @FieldSequence annotation",description:"Overview",source:"@site/docs/studio-guide/sequence_eng.md",sourceDirName:"studio-guide",slug:"/studio-guide/sequence_eng",permalink:"/docs/studio-guide/sequence_eng",draft:!1,unlisted:!1,editUrl:"https://gitlab.com/vizend/docs/-/edit/main/docs/studio-guide/sequence_eng.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Create Backend & Frontend Project",permalink:"/docs/studio-guide/project_eng"},next:{title:"Checkpoint Guide",permalink:"/docs/category/checkpoint-guide"}},c={},a=[{value:"Overview",id:"overview",level:2},{value:"Add \u2018@FieldSequence\u2019 for Attributes",id:"add-fieldsequence-for-attributes",level:2},{value:"Sequence Codes in Classes",id:"sequence-codes-in-classes",level:2}];function u(e){const t={h1:"h1",h2:"h2",img:"img",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"using-of-fieldsequence-annotation",children:"Using of @FieldSequence annotation"}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"\u2018@FieldSequence\u2019 has been added for some specific functionality that related to sequence."}),"\n",(0,i.jsx)(t.h2,{id:"add-fieldsequence-for-attributes",children:"Add \u2018@FieldSequence\u2019 for Attributes"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img.png",src:n(8218).A+"",width:"1006",height:"754"})}),"\n",(0,i.jsx)(t.p,{children:"Enter the Attributes for Entity Class and ADD \u2018@FieldSequence\u2019 annotation on the top of the attributes if necessary."}),"\n",(0,i.jsx)(t.h2,{id:"sequence-codes-in-classes",children:"Sequence Codes in Classes"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"img.png",src:n(8910).A+"",width:"752",height:"1268"})}),"\n",(0,i.jsx)(t.p,{children:"After generating the backend codes, FieldSequence codes are also generated in\nFooLogic, FooStroe, FooJpaStore and FooJpaRepository."}),"\n",(0,i.jsxs)(t.p,{children:["FooLogic\n",(0,i.jsx)(t.img,{alt:"img.png",src:n(4461).A+"",width:"1342",height:"1632"})]}),"\n",(0,i.jsx)(t.p,{children:"Sequence codes are generated automatically in FooLogic class."}),"\n",(0,i.jsx)(t.p,{children:"nextFirstSequence(String foodId)_ this method returns the next sequence from \u2018FooStroe\u2019 associated with the given \u2018fooId\u2019. It appears to always request the next sequence by passing the limit as 1 each time. (e.g. assume the previous sequence is 5, then the nextFirstSequence will return 6 since the increment is 1 by each time.)"}),"\n",(0,i.jsx)(t.p,{children:"nextSecondSequence(String foodId) _ same as the nextFirstSequence method, but different method in \u2018FooStore\u2019."}),"\n",(0,i.jsx)(t.p,{children:"nextFirstSequence(String foodId, int limit) _ this method retrieves the next \u2018limit\u2019 number of sequence from \u2018Foostore\u2019 associated with the given \u2018fooId\u2019. It calculates the starting sequence number based on the last sequence returned and constructs an array of integers representing the sequence. (e.g. assume the previous sequence is 5 and needs to output next 3 first sequence, then then the nextFirstSequence will return 6,7,8 if the increment is 1 by each time.)"}),"\n",(0,i.jsx)(t.p,{children:"nextSecondSequence(String foodId, int limit) _ same as the int[ ] nextFirstSequence method, but different method in \u2018FooStore\u2019."}),"\n",(0,i.jsxs)(t.p,{children:["FooStore\n",(0,i.jsx)(t.img,{alt:"img.png",src:n(2028).A+"",width:"1000",height:"844"})]}),"\n",(0,i.jsx)(t.p,{children:"Sequence codes are generated automatically in in FooStore interface."}),"\n",(0,i.jsx)(t.p,{children:"Int nextFirstSequence(String id, int increment)_ this method is used to generate to the next sequence number for a particular \u2018id\u2019. The \u2018increment\u2019 parameter specifies the amount by which the sequence should be incremented."}),"\n",(0,i.jsx)(t.p,{children:"Int nextSecondSequence(String id, int increment)_ same as the int nextFirstSequence method, but it follows a different sequence pattern or logic."}),"\n",(0,i.jsxs)(t.p,{children:["FooJpaStore\n",(0,i.jsx)(t.img,{alt:"img.png",src:n(1425).A+"",width:"1290",height:"1536"})]}),"\n",(0,i.jsx)(t.p,{children:"Sequence codes are generated automatically in FooJpaStore class."}),"\n",(0,i.jsx)(t.p,{children:"nextFirstSequence(String id, int increment) _ this method first calls \u2018fooJpaRepository.increaseFirstSequence(id, increment)\u2019 to increment the first sequence associated with the provided \u2018id\u2019 in a JPA-based data store. Then it retrieves the \u2018FooJpo\u2019 corresponding to the provided \u2018id\u2019 using\n\u2018fooJpaRepository.findById(Id)\u2019. If no \u2018FooJpo\u2019 is found for the given \u2018Id\u2019, it throws a \u2018NoSuchElementException\u2019. Otherwise, it returns the value of the first sequence from the retrieved \u2018FooJpo\u2019 entity."}),"\n",(0,i.jsx)(t.p,{children:"nextSecondSequence(String id, int increment) _ same as the nextFirstSequence method, but operates on a secondary sequence."}),"\n",(0,i.jsx)(t.p,{children:"These methods manipulate entities stored in the database using JPA Repository to increase the Sequence value and return the corresponding value."}),"\n",(0,i.jsxs)(t.p,{children:["FooJpaRepository\n",(0,i.jsx)(t.img,{alt:"img.png",src:n(644).A+"",width:"1732",height:"670"})]}),"\n",(0,i.jsx)(t.p,{children:"Sequence codes are generated automatically in FooJpaRepository."}),"\n",(0,i.jsx)(t.p,{children:"void increaseFirstSequence(String id, int increment)_ this method updates the \u2018firstSequence\u2019 attribute of a \u2018FooJpo\u2019 entity identified by the provided \u2018id\u2019. It increments the current value of \u2018firstSequence\u2019 by the specified increment. With \u2018@Modifying\u2019 to indicate that it will modify the data in the database, and \u2018@Query\u2019 is used to specify custom queries for updating the entity attributes. The \u2018@Param\u2019 annotation is used to map method parameters to named parameters in the query."}),"\n",(0,i.jsx)(t.p,{children:"void increaseSecondSequence(String id, int increment)_same as the increaseFirstSequence, but updates the \u2018secondSequence\u2019 attribute of a \u2018FooJpo\u2019 entity."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},1425:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/s-FooJpaStore-1141ca3602d75594de707693de54e090.png"},4461:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/s-FooLogic-9ea95c1873650cfef775ba6adf162a1b.png"},2028:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/s-FooStore-3ff2c0b630b5d365a4578f85517f17bf.png"},8218:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/s-add-attributes-892ee4c369c081f8f6f4098db03e1a0d.png"},8910:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/s-backend-tree-7fe2d2cf16d93d31a912b5dbc7717e96.png"},644:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/s-fooJpaRepo-042fad12df5bcb9e87c64a2b60c5664f.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var i=n(6540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);