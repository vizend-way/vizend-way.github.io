"use strict";(self.webpackChunkdocs_github_io=self.webpackChunkdocs_github_io||[]).push([[6223],{3254:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>o});var r=t(4848),a=t(8453);const s={sidebar_position:14},i="Field Encryption",d={id:"studio-guide/encrypt_eng",title:"Field Encryption",description:"Generally, encryption technology is used when storing sensitive information in a database. For example, field encryption can be used to prevent t data breaches of passwords required for login functionality.",source:"@site/docs/studio-guide/encrypt_eng.md",sourceDirName:"studio-guide",slug:"/studio-guide/encrypt_eng",permalink:"/docs/studio-guide/encrypt_eng",draft:!1,unlisted:!1,editUrl:"https://gitlab.com/vizend/docs/-/edit/main/docs/studio-guide/encrypt_eng.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"tutorialSidebar",previous:{title:"Field\uc554\ud638\ud654",permalink:"/docs/studio-guide/encrypt_kor"},next:{title:"Checkpoint Guide",permalink:"/docs/category/checkpoint-guide"}},c={},o=[{value:"Usage of @FieldEncrypted",id:"usage-of-fieldencrypted",level:2},{value:"Create Backend Codes",id:"create-backend-codes",level:2},{value:"Create Feature Codes",id:"create-feature-codes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"field-encryption",children:"Field Encryption"}),"\n",(0,r.jsx)(n.p,{children:"Generally, encryption technology is used when storing sensitive information in a database. For example, field encryption can be used to prevent t data breaches of passwords required for login functionality."}),"\n",(0,r.jsx)(n.h2,{id:"usage-of-fieldencrypted",children:"Usage of @FieldEncrypted"}),"\n",(0,r.jsxs)(n.p,{children:["After creating the Entity class, input the login-related attributes.\n",(0,r.jsx)(n.img,{alt:"img.png",src:t(5230).A+"",width:"1598",height:"760"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Getter\n@Setter\n@NoArgsConstructor\npublic class Bar extends StageEntity {\n    //\n    public enum BarField {\n        name, userId, password\n    }\n\n    private String name;\n    private String userId;\n    @FieldEncrypted\n    private String password;\n    ...\n"})}),"\n",(0,r.jsx)(n.p,{children:'To prevent sentitive data breaches of password attribute, the "@FieldEncrypted" annotation has been added.'}),"\n",(0,r.jsx)(n.p,{children:"After completing all attributes and settings, use the automation feature to create the modifyAttributes() method and an internal Enum that lists the fields. Also enter the attributes to BarCdo class as well."}),"\n",(0,r.jsx)(n.p,{children:"Use \u2018Gen the field enum\u2019 to create inner Enum."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"public class Bar extends StageEntity {\n    //\n    public enum BarField {\n        name, userId, password\n    }\n    ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use \u2018Update modifyAttributes()\u2019 to modify original codes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:'@Override\nprotected void modifyAttributes(NameValueList nameValues) {\n    //\n    for (NameValue nameValue : nameValues.list()) {\n        String value = nameValue.getValue();\n        switch(nameValue.getName()) {\n            case "name":\n                this.name = value;\n                break;\n            case "userId":\n                this.userId = value;\n                break;\n            case "password":\n                this.password = value;\n                break;\n            default:\n                throw new IllegalArgumentException("Update not allowed: " + nameValue);\n        }\n    }\n}\n...\n'})}),"\n",(0,r.jsx)(n.p,{children:"Enter Attributes to BarCdo Class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Getter\n@Setter\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class BarCdo extends CreationDataObject {\n    //\n    private String name;\n    private String userId;\n    private  String password;\n    ...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"create-backend-codes",children:"Create Backend Codes"}),"\n",(0,r.jsxs)(n.p,{children:["With the current setup, generate backend codes.\n",(0,r.jsx)(n.img,{alt:"img_1.png",src:t(7095).A+"",width:"1646",height:"820"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img_2.png",src:t(1997).A+"",width:"986",height:"820"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img_3.png",src:t(6976).A+"",width:"938",height:"954"})}),"\n",(0,r.jsxs)(n.p,{children:["After the completion of Backend Codes generation, you can verify the @FieldEncrypted related code in the BarJpo class.\n",(0,r.jsx)(n.img,{alt:"img_4.png",src:t(7582).A+"",width:"443",height:"1008"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:'@Getter\n@Setter\n@NoArgsConstructor\n@Entity\n@Table(name = "BAR")\npublic class BarJpo extends StageEntityJpo {\n    /* Gen by Vizend Studio v6.0.0 */\n    private String name;\n    private String userId;\n    private String password;\n\n    public BarJpo(Bar bar) {\n        /* Gen by Vizend Studio v6.0.0 */\n        super(bar);\n        BeanUtils.copyProperties(bar, this);\n        this.password = ValueEncryptor.encrypt(bar.getPassword());\n    }\n\n    public Bar toDomain() {\n        /* Gen by Vizend Studio v6.0.0 */\n        Bar bar = new Bar(getId(), genRequesterKey());\n        BeanUtils.copyProperties(this, bar);\n        bar.setPassword(ValueEncryptor.decrypt(this.password));\n        return bar;\n    }\n    ...\n'})}),"\n",(0,r.jsx)(n.p,{children:"this.password = ValueEncryptor.encrypt(bar.getPassword()); encrypts the password information entered by the user, it will transform into an unreadable string that others cannot understand before storing it in the database."}),"\n",(0,r.jsx)(n.p,{children:"In contrast, bar.setPassword(ValueEncryptor.decrypt(this.password)); retrieves the encrypted password information stored in the database, decrypts it back into its original password form, and sets it to the Entity field."}),"\n",(0,r.jsx)(n.h2,{id:"create-feature-codes",children:"Create Feature Codes"}),"\n",(0,r.jsx)(n.p,{children:"In order to check the database encryption functionality, we will add a few features. First, we will add a register feature to the Bar Entity."}),"\n",(0,r.jsx)(n.p,{children:"Create a Feature Request through module Fa\xe7ade."}),"\n",(0,r.jsxs)(n.p,{children:["Select the bar-fa\xe7ade -> Vizend Studio -> Click \u2019Create Feature Request\u2019.\n",(0,r.jsx)(n.img,{alt:"img_5.png",src:t(1894).A+"",width:"1792",height:"1476"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_6.png",src:t(7363).A+"",width:"842",height:"464"}),"\nSelect \u2018CommandRequst\u2019 to create register feature."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Getter\n@Setter\n@AllArgsConstructor\n@NoArgsConstructor\n@AuthorizedRole(BarRole.Director)\npublic class RegisterBarCommand extends CommandRequest {\n    //\n    private String name;\n    private String userId;\n    private String password;\n\n    public void validate() {\n        /**\n         *  FIXME : User Implementation\n         * Example.\n         * Assert.hasText(skuNo, \"'skuNo' is required\");\n         * Assert.isTrue(increaseRate > 0, \"'increaseRate' is greater than 0\");\n         */\n    }\n    ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enter the relevant attributes and modify the validate() method as needed."}),"\n",(0,r.jsx)(n.p,{children:"After completing the input and modifications, generate the Feature code."}),"\n",(0,r.jsxs)(n.p,{children:["Select the RegisterBarCommand -> Vizend Studio -> Click \u2019Create Feature Codes\u2019.\n",(0,r.jsx)(n.img,{alt:"img_7.png",src:t(4778).A+"",width:"1824",height:"884"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img_8.png",src:t(3435).A+"",width:"738",height:"228"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_9.png",src:t(7262).A+"",width:"744",height:"1506"}),"\nBarFlow, BarFlowFacade, BarFlowResource have been generated."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Service\n@Transactional\n@RequiredArgsConstructor\npublic class BarFlow {\n    //\n\n    public String registerBar(String name, String userId, String password) {\n        /*FIXME: User Implementation*/\n        return null;\n    }\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"The registerBar() method in the BarFlow class is the part that developers need to implement."}),"\n",(0,r.jsx)(n.p,{children:"Below is an example of register-related code."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Service\n@Transactional\n@RequiredArgsConstructor\npublic class BarFlow {\n    //\n    private final BarLogic barLogic;\n\n    public String registerBar(String name, String userId, String password) {\n        BarCdo barCdo = BarCdo.builder()\n                .name(name)\n                .userId(userId)\n                .password(password)\n                .build();\n\n        String id = barLogic.registerBar(barCdo);\n        return id;\n    }\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you declare the field as final, Spring will implant the BarLogic bean into that field via the constructor of the respective class."}),"\n",(0,r.jsx)(n.p,{children:"Next, we will add a retrieve feature to the Bar Entity."}),"\n",(0,r.jsxs)(n.p,{children:["Select the bar-fa\xe7ade -> Vizend Studio -> Click \u2019Create Feature Request\u2019.\n",(0,r.jsx)(n.img,{alt:"img_10.png",src:t(1894).A+"",width:"1792",height:"1476"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_11.png",src:t(3389).A+"",width:"828",height:"452"}),"\nSelect \u2018QueryRequest\u2019 to create find feature."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img_12.png",src:t(5193).A+"",width:"844",height:"456"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img_13.png",src:t(372).A+"",width:"764",height:"1580"})}),"\n",(0,r.jsx)(n.p,{children:"FindBarQuery has been generated. Once the FindBarQuery is created, add the userId field to enable querying by userId, and input the query result type as the generic type of QueryRequest."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Getter\n@Setter\n@AllArgsConstructor\n@NoArgsConstructor\n@AuthorizedRole(BarRole.Director)\npublic class FindBarQuery extends QueryRequest<Bar> {\n    //\n    private String userId;\n\n    public void validate() {\n        /**\n         *  FIXME : User Implementation\n         * Example.\n         * Assert.hasText(skuNo, \"'skuNo' is required\");\n         * Assert.isTrue(increaseRate > 0, \"'increaseRate' is greater than 0\");\n         */\n    }\n    ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"After completing the input and modifications, generate the Feature code."}),"\n",(0,r.jsxs)(n.p,{children:["Select the FindBarQuery -> Vizend Studio -> Click \u2019Create Feature Codes\u2019.\n",(0,r.jsx)(n.img,{alt:"img_14.png",src:t(8166).A+"",width:"1826",height:"1026"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"img_15.png",src:t(5916).A+"",width:"746",height:"240"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_16.png",src:t(608).A+"",width:"742",height:"1668"}),"\nBarSeek, BarSeekFacade, BarSeekResource have been generated."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Service\n@Transactional\n@RequiredArgsConstructor\npublic class BarSeek {\n    //\n\n    public Bar findBar(String userId) {\n        /*FIXME: User Implementation*/\n        return null;\n    }\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"The findBar() method in the BarSeek class is the part that developers need to implement."}),"\n",(0,r.jsx)(n.p,{children:"Below is an example of retrieve-related code."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Service\n@Transactional\n@RequiredArgsConstructor\npublic class BarSeek {\n    //\n    private final BarLogic barLogic;\n\n    public Bar findBar(String userId) {\n        Bar bar = barLogic.findByUserId(userId);\n        return bar;\n    }\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you declare the field as final, Spring will implant the BarLogic bean into that field via the constructor of the respective class."}),"\n",(0,r.jsx)(n.p,{children:"findByUserId\u2019 feature needs to added to the OptionStore interface. (Manual Information is in the Backend Code generation chapter.)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"public interface BarOptionStore {\n    //\n    Bar retrieveByUserId(String userId);\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"The method naming should adhere to the conventions of QueryMethod in Spring Data."}),"\n",(0,r.jsxs)(n.p,{children:["After adding the relevant content to BarOptionStore, you can generate Option Store Codes through the studio.\n",(0,r.jsx)(n.img,{alt:"img_17.png",src:t(2885).A+"",width:"1486",height:"748"}),"\nThe code related to findByUserId() method is generated in the BarLogic, BarOptionJpaStore class, and BarJpaRepository."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"public Bar findByUserId(String userId) {\n    /* Gen by Vizend Studio v6.0.0 */\n    return barOptionStore.retrieveByUserId(userId);\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"BarLogic Class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"@Override\npublic Bar retrieveByUserId(String userId) {\n    /* Gen by Vizend Studio v6.0.0 */\n    return barJpaRepository.findByUserId(userId).map(BarJpo::toDomain).orElse(null);\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"BarOptionJpaStroe Class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Java",children:"public interface BarJpaRepository extends JpaRepository<BarJpo, String> {\n    /* Gen by Vizend Studio v6.0.0 */\n    Optional<BarJpo> findByUserId(String userId);\n}\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"BarJpaRepository Interface"}),"\n",(0,r.jsxs)(n.p,{children:["Before running the tests, refer to the schema.script file to configure the corresponding database and account.\n",(0,r.jsx)(n.img,{alt:"img_18.png",src:t(9747).A+"",width:"1312",height:"1290"}),"\nIn the terminal, use the mysql command to connect to MariaDB and create the bar database."]}),"\n",(0,r.jsxs)(n.p,{children:["You can run Spring Boot and use Swagger-UI to verify the list of provided APIs.\n",(0,r.jsx)(n.img,{alt:"img_19.png",src:t(1472).A+"",width:"3142",height:"652"}),'\nThe "register-bar" and "find-bar" features have been added.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_20.png",src:t(7991).A+"",width:"2900",height:"412"}),'\nClick "Try it out" button to input data.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_21.png",src:t(2564).A+"",width:"2890",height:"1286"}),'\nAfter entering the data, click "Execute" button to verify if it has been successfully stored.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_22.png",src:t(258).A+"",width:"2862",height:"1750"}),"\nThe data has been successfully stored."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_23.png",src:t(3381).A+"",width:"2922",height:"310"}),"\nYou can also check it in the terminal."]}),"\n",(0,r.jsx)(n.p,{children:"The password part is stored encrypted"}),"\n",(0,r.jsx)(n.p,{children:"You can also verify in Swagger-UI whether the encrypted password is returned as the original input string when retrieving data stored in the database."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_24.png",src:t(1452).A+"",width:"2932",height:"402"}),'\nClick "Try it out" button to input userId information.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_25.png",src:t(4342).A+"",width:"2900",height:"1292"}),'\nAfter entering the userId, click "Execute" button to verify if it has been successfully retrieved.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"img_26.png",src:t(9403).A+"",width:"2856",height:"1656"}),"\nThe encrypted password has been successfully decrypted and returned."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7582:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-BarJpo-42541f07f90f3f8b0fa15f7d0b0527f0.png"},608:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-FindForQueryCodes-b992914c5f3589e559d5a467dbcc5284.png"},4342:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-add-userId-7868e13fced550dbb358f074dccc2c60.png"},5230:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-attributesForBarClass-1846d8d78a7589c6c97e13e785057873.png"},5916:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-barForQuery-6a4eac18f50f52d5eda7dda021385491.png"},7363:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-commandCreate-73519cfcfae93e43ecbcf7629e02bb70.png"},7095:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-create-backendcodes-bar-ee6aa921edbdd652e0ffb226929c3211.png"},1997:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-createAll-b9e64b7536c90d19733968f1b5086436.png"},4778:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-createFeature-5f2e9474cb6016f28b21338052850fe7.png"},2885:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-createOptionStoreCode-b2c8d8786da0b1881088c7fb14d80075.png"},6976:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-created-d1a17c4eafc94bca10dbd0e99396992c.png"},5193:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-creation-df5e7b29d2fb85f9a18d4b8e50d97f8a.png"},7262:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-featureTree-84cd08811bbeec7a2eb2c68fe9895af1.png"},8166:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-find-featureCodes-a560e0855adfc2b959f43d665b7ae5ed.png"},3435:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-flowName-8e577b17cc44d17cdba39bca8d5f2151.png"},3389:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-queryRequest-f50f5d65557947af6ad62d8b8e6cc854.png"},372:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-queryTree-9fbc8ee1c196db6a593a8cb00decd70b.png"},1894:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-requestFeture-f52c2e32b37832abaf0e0fbddc785453.png"},2564:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-save-data-9f9d4707dd8ff837a19732a1fc959178.png"},3381:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-saveTerminal-dd40a6051d4e4dabf666993d44752395.png"},9747:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-schema-5f75505a77509a247d6bad15044b07b2.png"},9403:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-swagger-find-ok-057e220d404a069d4735aeb79ea7a236.png"},258:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-swagger-saveOK-1527a0ce8c890780976951838efecfb0.png"},7991:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-swagger-tryitout-db6b7b42d1ec06f1d384147adf728316.png"},1472:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-swagger-50a44606e817effe14bc319922164b56.png"},1452:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/enc-tryitoutForFind-5e5a83ac996473388a8d7b0623498040.png"},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);